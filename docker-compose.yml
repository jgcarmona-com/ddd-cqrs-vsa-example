version: '3.4'

networks:
  qna-network:
    driver: bridge

services:
  jgcarmona.qna.api.web:
    image: ${DOCKER_REGISTRY-}jgcarmonaqnaapiweb
    networks:
      - qna-network
    build:
      context: .
      dockerfile: src/Jgcarmona.Qna.Api.Web/Dockerfile
    ports:
      - "7100:7000"  # HTTP
      - "7101:7001"  # HTTPS
    depends_on:
      - sqlserver
      - rabbitmq
      - seq

  jgcarmona.qna.services.syncservice:
    image: ${DOCKER_REGISTRY-}jgcarmonaqnaservicessyncservice
    networks:
      - qna-network
    build:
      context: .
      dockerfile: src/Jgcarmona.Qna.Services.SyncService/Dockerfile
    depends_on:
      - mongodb
      - rabbitmq
      - seq

  jgcarmona.qna.services.statsservice:
    image: ${DOCKER_REGISTRY-}jgcarmonaqnaservicesstatsservice
    networks:
      - qna-network
    build:
      context: .
      dockerfile: src/Jgcarmona.Qna.Services.StatsService/Dockerfile
    depends_on:
      - sqlserver
      - rabbitmq
      - seq

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      - qna-network
    user: root
    container_name: SqlServerContainer
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "YourStrong@Passw0rd"
    ports:
      - "1433:1433"
    volumes:
      - ./infrastructure/docker/sqlserver-data:/var/opt/mssql/data

  mongodb:
    image: mongo:latest
    hostname: mongo
    networks:
      - qna-network
    container_name: MongoDbContainer
    environment:
      MONGO_INITDB_ROOT_USERNAME: qnauser
      MONGO_INITDB_ROOT_PASSWORD: YourStrong@Passw0rd
    ports:
    - "27017:27017"
    volumes:
    - ./infrastructure/docker/mongo-data:/data/db
 
  mongo-express:
    image: mongo-express:latest
    hostname: mongo-express
    networks:
      - qna-network
    container_name: MongoExpressContainer
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: qnauser
      ME_CONFIG_MONGODB_ADMINPASSWORD: YourStrong@Passw0rd
      ME_CONFIG_MONGODB_SERVER: "mongo"
    ports:
      - "8085:8081"
    depends_on:
      - mongodb

  rabbitmq:
    image: rabbitmq:3-management
    networks:
      - qna-network
    hostname: rabbitmq
    container_name: RabbitMqContainer
    environment:
      RABBITMQ_DEFAULT_USER: qnauser
      RABBITMQ_DEFAULT_PASS: P@ssw0rd!
    ports:
      - "5672:5672"  # AMQP
      - "15672:15672" # Management
    volumes:
      - ./infrastructure/docker/rabbitmq-data:/var/lib/rabbitmq

  seq:
    image: datalust/seq:latest
    networks:
      - qna-network
    container_name: SeqContainer
    environment:
      ACCEPT_EULA: "Y"
      SEQ_API_KEY: "SeqApiKey"
    ports:
      - "5341:80"  # Web interface
      - "5342:443" # HTTPS interface
    volumes:
      - ./infrastructure/docker/seq-data:/data

